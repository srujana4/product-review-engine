plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext{
    spring_plugin_version = '1.5.2.RELEASE'
}

repositories {
    mavenCentral()
}

ext {
    glassfishJavaxInjectVersion = "2.5.0-b42"
    hibernateVersion = "5.4.10.Final"
    mockitoVersion = "2.21.0"
    testngVersion = "6.8.8"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'javax.inject') {
            details.useTarget group: 'org.glassfish.hk2.external', name: details.requested.name, version: "${glassfishJavaxInjectVersion}"
        }
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtime 'mysql:mysql-connector-java:8.0.11'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.testng:testng:${testngVersion}"

    compile("org.hibernate:hibernate-core:${hibernateVersion}") {
        exclude group: 'dom4j', module: 'dom4j'
    }
    compile("org.hibernate:hibernate-c3p0:${hibernateVersion}") {
        exclude group: 'dom4j', module: 'dom4j'
    }

}

test {
    useJUnitPlatform()
}
